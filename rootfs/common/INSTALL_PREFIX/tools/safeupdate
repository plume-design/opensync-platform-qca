#!/bin/sh

UPG_IMAGE=""
UPG_ACTION=""
UPG_PASSWORD=""

# Subset of OSP error codes, see core/src/lib/osp/inc/osp_upg.h for more info
OSP_UPG_IMG_FAIL=7
OSP_UPG_FL_WRITE=9
OSP_UPG_BC_SET=11

function upg_image_write()
{
    sysupgrade -n "$1" || exit $OSP_UPG_FL_WRITE
}

function upg_image_commit()
{
    return 0
}

# Decrypt an encrypted image:

# $1 - input file
# $2 - output file
# $3 - password

# Note: This function exports the password via the environment
function upg_image_decrypt()
{
    _PASS="$3"
    export _PASS
    openssl enc -d -pass env:_PASS -nosalt -aes-256-cbc -md sha256 -in "$1" -out "$2"
    rc="$?"
    unset _PASS
    return "$rc"
}

function help()
{
    cat << EOF

safeupdate OPTIONS [-P password] [[-u|-w] IMAGE]

options are:
   -u|--upgrade [IMAGE]  - Upgrade alternate flash partition
   -w|--write [IMAGE]    - Upgrade alternate flash partition without rebooting
   -P|--password [P]     - Image decryption password

EOF
    exit 1
}

while [ -n "$1" ]
do
    case "$1" in
        -P|--password)
            UPG_PASSWORD="$2"
            shift 2
            ;;

        -u|--upgrade)
            UPG_IMAGE="$2"
            UPG_ACTION="u"
            shift 2
            ;;

        -w|--write)
            UPG_IMAGE="$2"
            UPG_ACTION="w"
            shift 2
            ;;

        *)
            [ -n "$1" ] && echo "Unknown option: $1"
            help
        ;;
    esac
done

[ -z "$UPG_IMAGE" -o -z "$UPG_ACTION" ] && help

if [ ! -f "$UPG_IMAGE" -o ! -r "$UPG_IMAGE" ]
then
    echo "Cannot access image file: $UPG_IMAGE"
    exit $OSP_UPG_IMG_FAIL
fi

#
# Decrypt phase; When calculating the output (unencrypted) filename, if the
# encrypted image ends in .eim, simply remove the extension.  Otherwise
# add ".img" to the output filename
#
if [ -n "$UPG_PASSWORD" ]
then
    UPG_EIM="$UPG_IMAGE"
    if [ "${UPG_IMAGE##*.}" == "eim" ]
    then
        UPG_IMAGE="${UPG_EIM%%.eim}"
    else
        UPG_IMAGE="${UPG_EIM}.img"
    fi

    # Verify and decrypt image
    echo "Verifying image: $UPG_EIM"
    upg_image_decrypt "$UPG_EIM" "/dev/null" "$UPG_PASSWORD" || exit $OSP_UPG_IMG_FAIL
    echo "Verification OK."

    echo "Decrypting image: $UPG_EIM"
    upg_image_decrypt "$UPG_EIM" "$UPG_IMAGE" "$UPG_PASSWORD" || exit $OSP_UPG_IMG_FAIL
    echo "Decryption OK."
fi

#
# Upgrade phase
#
case "$UPG_ACTION" in
    *u*|*w*)
        echo "Upgrading using image: $UPG_IMAGE"
        upg_image_write "$UPG_IMAGE"
        upg_image_commit
esac
echo "Upgrade OK"

#
# Reboot phase
#
case "$UPG_ACTION" in
    *u*)
        echo "Rebooting."
        reboot -Rtype=upgrade -Rreason="System upgrade"
        ;;
esac
